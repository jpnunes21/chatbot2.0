{"ast":null,"code":"var _jsxFileName = \"/home/joao/Desafio-Lexart/chatbot/src/App.js\";\nimport React from 'react';\nimport Chatbot from 'react-chatbot-kit';\nimport './App.css';\nimport 'react-chatbot-kit/build/main.css';\nimport { Route, Routes } from 'react-router-dom';\nimport config from './config';\nimport ActionProvider from './ActionProvider';\nimport MessageParser from './MessageParser';\nimport ConversationData from './pages/ConversationHistory';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  //const [showBot, toggleBot] = useState(false);\n  /*\n  const saveMessages = (messages, HTMLString) => {\n    localStorage.setItem('chat_messages', JSON.stringify(messages));\n  };\n   const loadMessages = () => {\n    const messages = JSON.parse(localStorage.getItem('chat_messages'));\n    return messages;\n  };\n  */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          render: () => /*#__PURE__*/_jsxDEV(Chatbot, {\n            config: config,\n            actionProvider: ActionProvider,\n            messageParser: MessageParser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/data\",\n          component: ConversationData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Chatbot","Route","Routes","config","ActionProvider","MessageParser","ConversationData","jsxDEV","_jsxDEV","App","className","children","path","render","actionProvider","messageParser","fileName","_jsxFileName","lineNumber","columnNumber","component","_c","$RefreshReg$"],"sources":["/home/joao/Desafio-Lexart/chatbot/src/App.js"],"sourcesContent":["import React from 'react';\nimport Chatbot from 'react-chatbot-kit';\nimport './App.css';\nimport 'react-chatbot-kit/build/main.css'\nimport { Route, Routes } from 'react-router-dom';\n\nimport config from './config';\nimport ActionProvider from './ActionProvider';\nimport MessageParser from './MessageParser';\nimport ConversationData from './pages/ConversationHistory';\n\nfunction App() {\n  //const [showBot, toggleBot] = useState(false);\n  /*\n  const saveMessages = (messages, HTMLString) => {\n    localStorage.setItem('chat_messages', JSON.stringify(messages));\n  };\n\n  const loadMessages = () => {\n    const messages = JSON.parse(localStorage.getItem('chat_messages'));\n    return messages;\n  };\n  */\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Routes>\n        <Route path='/' render={ () => (<Chatbot \n        config={config}\n        actionProvider={ActionProvider}\n        messageParser={MessageParser}\n      />) }></Route>\n      <Route path=\"/data\" component={ ConversationData } />\n      </Routes>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,mBAAmB;AACvC,OAAO,WAAW;AAClB,OAAO,kCAAkC;AACzC,SAASC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AAEhD,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,gBAAgB,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,SAASC,GAAGA,CAAA,EAAG;EACb;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAEE,oBACED,OAAA;IAAKE,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBH,OAAA;MAAQE,SAAS,EAAC,YAAY;MAAAC,QAAA,eAC5BH,OAAA,CAACN,MAAM;QAAAS,QAAA,gBACPH,OAAA,CAACP,KAAK;UAACW,IAAI,EAAC,GAAG;UAACC,MAAM,EAAGA,CAAA,kBAAOL,OAAA,CAACR,OAAO;YACxCG,MAAM,EAAEA,MAAO;YACfW,cAAc,EAAEV,cAAe;YAC/BW,aAAa,EAAEV;UAAc;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9B;QAAI;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACdX,OAAA,CAACP,KAAK;UAACW,IAAI,EAAC,OAAO;UAACQ,SAAS,EAAGd;QAAkB;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACE,EAAA,GA1BQZ,GAAG;AA4BZ,eAAeA,GAAG;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}