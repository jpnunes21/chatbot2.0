{"ast":null,"code":"class ActionProvider {\n  constructor(createChatBotMessage, setStateFunc, createClientMessage, stateRef, createCustomMessage, ...rest) {\n    this.createChatBotMessage = createChatBotMessage;\n    this.setState = setStateFunc;\n    this.createClientMessage = createClientMessage;\n    this.stateRef = stateRef;\n    this.createCustomMessage = createCustomMessage;\n  }\n  greet() {\n    const greetingMessage = this.createChatBotMessage(\"Please, tell me your username.\");\n    this.updateChatbotState(greetingMessage);\n    this.getUserNameAndPassword();\n  }\n  getUserNameAndPassword() {\n    const message = this.createChatBotMessage(\"User:\", {\n      widget: \"loginWidget\"\n    });\n    this.updateChatbotState(message);\n  }\n  goodBye(state) {\n    const goodByeMessage = this.createChatBotMessage(\"Goodbye!\");\n    console.log(\"state\");\n    let csv = \"\";\n    state.messages.forEach(message => {\n      csv += message.type;\n      csv += ',' + message.message;\n    });\n    localStorage.setItem('chat_messages', JSON.stringify(csv));\n    this.updateChatbotState(goodByeMessage);\n  }\n  loanOptions() {\n    const message = this.createChatBotMessage(\"Do you need help with loans? Here is some links that may help:\", {\n      widget: \"loanLinks\"\n    });\n    this.updateChatbotState(message);\n  }\n  updateChatbotState(message) {\n    this.setState(prevState => ({\n      ...prevState,\n      messages: [...prevState.messages, message]\n    }));\n  }\n}\nexport default ActionProvider;","map":{"version":3,"names":["ActionProvider","constructor","createChatBotMessage","setStateFunc","createClientMessage","stateRef","createCustomMessage","rest","setState","greet","greetingMessage","updateChatbotState","getUserNameAndPassword","message","widget","goodBye","state","goodByeMessage","console","log","csv","messages","forEach","type","localStorage","setItem","JSON","stringify","loanOptions","prevState"],"sources":["/home/joao/Desafio-Lexart/chatbot/src/ActionProvider.js"],"sourcesContent":["class ActionProvider {\n    constructor(\n        createChatBotMessage,\n        setStateFunc,\n        createClientMessage,\n        stateRef,\n        createCustomMessage,\n        ...rest\n    ) {\n        this.createChatBotMessage = createChatBotMessage;\n        this.setState = setStateFunc;\n        this.createClientMessage = createClientMessage;\n        this.stateRef = stateRef;\n        this.createCustomMessage = createCustomMessage;\n    }\n\n    greet() {\n        const greetingMessage = this.createChatBotMessage(\"Please, tell me your username.\")\n        this.updateChatbotState(greetingMessage)\n        this.getUserNameAndPassword()\n    }\n\n    getUserNameAndPassword() {\n        const message = this.createChatBotMessage(\"User:\",\n            {\n                widget: \"loginWidget\",\n            }\n        );\n        this.updateChatbotState(message);\n    }\n\n    goodBye(state) {\n        const goodByeMessage = this.createChatBotMessage(\"Goodbye!\")\n        console.log(\"state\");\n        \n        \n        let csv = \"\";\n\n        state.messages.forEach(message => {\n            csv += message.type;\n            csv += ',' + message.message;\n        });\n\n        localStorage.setItem('chat_messages', JSON.stringify(csv));\n\n        this.updateChatbotState(goodByeMessage)\n    }\n\n    loanOptions() {\n        const message = this.createChatBotMessage(\"Do you need help with loans? Here is some links that may help:\",\n            {\n                widget: \"loanLinks\",\n            }\n        );\n        this.updateChatbotState(message);\n    };\n\n    updateChatbotState(message) {\n        this.setState(prevState => ({\n            ...prevState, messages: [...prevState.messages, message]\n        }))\n    }\n}\n\nexport default ActionProvider;"],"mappings":"AAAA,MAAMA,cAAc,CAAC;EACjBC,WAAWA,CACPC,oBAAoB,EACpBC,YAAY,EACZC,mBAAmB,EACnBC,QAAQ,EACRC,mBAAmB,EACnB,GAAGC,IAAI,EACT;IACE,IAAI,CAACL,oBAAoB,GAAGA,oBAAoB;IAChD,IAAI,CAACM,QAAQ,GAAGL,YAAY;IAC5B,IAAI,CAACC,mBAAmB,GAAGA,mBAAmB;IAC9C,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,mBAAmB,GAAGA,mBAAmB;EAClD;EAEAG,KAAKA,CAAA,EAAG;IACJ,MAAMC,eAAe,GAAG,IAAI,CAACR,oBAAoB,CAAC,gCAAgC,CAAC;IACnF,IAAI,CAACS,kBAAkB,CAACD,eAAe,CAAC;IACxC,IAAI,CAACE,sBAAsB,CAAC,CAAC;EACjC;EAEAA,sBAAsBA,CAAA,EAAG;IACrB,MAAMC,OAAO,GAAG,IAAI,CAACX,oBAAoB,CAAC,OAAO,EAC7C;MACIY,MAAM,EAAE;IACZ,CACJ,CAAC;IACD,IAAI,CAACH,kBAAkB,CAACE,OAAO,CAAC;EACpC;EAEAE,OAAOA,CAACC,KAAK,EAAE;IACX,MAAMC,cAAc,GAAG,IAAI,CAACf,oBAAoB,CAAC,UAAU,CAAC;IAC5DgB,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IAGpB,IAAIC,GAAG,GAAG,EAAE;IAEZJ,KAAK,CAACK,QAAQ,CAACC,OAAO,CAACT,OAAO,IAAI;MAC9BO,GAAG,IAAIP,OAAO,CAACU,IAAI;MACnBH,GAAG,IAAI,GAAG,GAAGP,OAAO,CAACA,OAAO;IAChC,CAAC,CAAC;IAEFW,YAAY,CAACC,OAAO,CAAC,eAAe,EAAEC,IAAI,CAACC,SAAS,CAACP,GAAG,CAAC,CAAC;IAE1D,IAAI,CAACT,kBAAkB,CAACM,cAAc,CAAC;EAC3C;EAEAW,WAAWA,CAAA,EAAG;IACV,MAAMf,OAAO,GAAG,IAAI,CAACX,oBAAoB,CAAC,gEAAgE,EACtG;MACIY,MAAM,EAAE;IACZ,CACJ,CAAC;IACD,IAAI,CAACH,kBAAkB,CAACE,OAAO,CAAC;EACpC;EAEAF,kBAAkBA,CAACE,OAAO,EAAE;IACxB,IAAI,CAACL,QAAQ,CAACqB,SAAS,KAAK;MACxB,GAAGA,SAAS;MAAER,QAAQ,EAAE,CAAC,GAAGQ,SAAS,CAACR,QAAQ,EAAER,OAAO;IAC3D,CAAC,CAAC,CAAC;EACP;AACJ;AAEA,eAAeb,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}