{"ast":null,"code":"class ActionProvider {\n  constructor(createChatBotMessage, setStateFunc, createClientMessage, stateRef, createCustomMessage, ...rest) {\n    this._gerarCsv = state => {\n      let csv = \"type, message\\n\";\n      state.messages.forEach(message => {\n        csv += message.type;\n        csv += ',' + message.message;\n        csv += '\\n';\n      });\n      var hiddenElement = document.createElement('a');\n      hiddenElement.href = 'data:text/csv;charset=utf-8,' + encodeURI(csv);\n      hiddenElement.target = '_blank';\n      hiddenElement.download = 'chatbot.csv';\n    };\n    this.createChatBotMessage = createChatBotMessage;\n    this.setState = setStateFunc;\n    this.createClientMessage = createClientMessage;\n    this.stateRef = stateRef;\n    this.createCustomMessage = createCustomMessage;\n  }\n  greet() {\n    const greetingMessage = this.createChatBotMessage(\"Please, tell me your username.\");\n    this.updateChatbotState(greetingMessage);\n    this.getUserNameAndPassword();\n  }\n  getUserNameAndPassword() {\n    const message = this.createChatBotMessage(\"User:\", {\n      widget: \"loginWidget\"\n    });\n    this.updateChatbotState(message);\n  }\n  goodBye(state) {\n    this.createChatBotMessage(\"Goodbye!\");\n    _gerarCsv(state);\n    //this.updateChatbotState(goodByeMessage)\n  }\n\n  loanOptions() {\n    const message = this.createChatBotMessage(\"Do you need help with loans? Here is some links that may help:\", {\n      widget: \"loanLinks\"\n    });\n    this.updateChatbotState(message);\n  }\n  updateChatbotState(message) {\n    this.setState(prevState => ({\n      ...prevState,\n      messages: [...prevState.messages, message]\n    }));\n  }\n}\nexport default ActionProvider;","map":{"version":3,"names":["ActionProvider","constructor","createChatBotMessage","setStateFunc","createClientMessage","stateRef","createCustomMessage","rest","_gerarCsv","state","csv","messages","forEach","message","type","hiddenElement","document","createElement","href","encodeURI","target","download","setState","greet","greetingMessage","updateChatbotState","getUserNameAndPassword","widget","goodBye","loanOptions","prevState"],"sources":["/home/joao/Desafio-Lexart/chatbot/src/ActionProvider.js"],"sourcesContent":["class ActionProvider {\n    constructor(\n        createChatBotMessage,\n        setStateFunc,\n        createClientMessage,\n        stateRef,\n        createCustomMessage,\n        ...rest\n    ) {\n        this.createChatBotMessage = createChatBotMessage;\n        this.setState = setStateFunc;\n        this.createClientMessage = createClientMessage;\n        this.stateRef = stateRef;\n        this.createCustomMessage = createCustomMessage;\n    }\n\n    greet() {\n        const greetingMessage = this.createChatBotMessage(\"Please, tell me your username.\")\n        this.updateChatbotState(greetingMessage)\n        this.getUserNameAndPassword()\n    }\n\n    getUserNameAndPassword() {\n        const message = this.createChatBotMessage(\"User:\",\n            {\n                widget: \"loginWidget\",\n            }\n        );\n        this.updateChatbotState(message);\n    }\n\n    _gerarCsv = (state) => {\n        let csv = \"type, message\\n\";\n        state.messages.forEach(message => {\n            csv += message.type;\n            csv += ',' + message.message;\n            csv += '\\n';\n        });\n\n        var hiddenElement = document.createElement('a');\n        hiddenElement.href = 'data:text/csv;charset=utf-8,' + encodeURI(csv);\n        hiddenElement.target = '_blank';\n        hiddenElement.download = 'chatbot.csv';\n    }\n\n    goodBye(state) {\n        this.createChatBotMessage(\"Goodbye!\")\n        _gerarCsv(state)\n        //this.updateChatbotState(goodByeMessage)\n    }\n\n    loanOptions() {\n        const message = this.createChatBotMessage(\"Do you need help with loans? Here is some links that may help:\",\n            {\n                widget: \"loanLinks\",\n            }\n        );\n        this.updateChatbotState(message);\n    };\n\n    updateChatbotState(message) {\n        this.setState(prevState => ({\n            ...prevState, messages: [...prevState.messages, message]\n        }))\n    }\n}\n\nexport default ActionProvider;"],"mappings":"AAAA,MAAMA,cAAc,CAAC;EACjBC,WAAWA,CACPC,oBAAoB,EACpBC,YAAY,EACZC,mBAAmB,EACnBC,QAAQ,EACRC,mBAAmB,EACnB,GAAGC,IAAI,EACT;IAAA,KAuBFC,SAAS,GAAIC,KAAK,IAAK;MACnB,IAAIC,GAAG,GAAG,iBAAiB;MAC3BD,KAAK,CAACE,QAAQ,CAACC,OAAO,CAACC,OAAO,IAAI;QAC9BH,GAAG,IAAIG,OAAO,CAACC,IAAI;QACnBJ,GAAG,IAAI,GAAG,GAAGG,OAAO,CAACA,OAAO;QAC5BH,GAAG,IAAI,IAAI;MACf,CAAC,CAAC;MAEF,IAAIK,aAAa,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MAC/CF,aAAa,CAACG,IAAI,GAAG,8BAA8B,GAAGC,SAAS,CAACT,GAAG,CAAC;MACpEK,aAAa,CAACK,MAAM,GAAG,QAAQ;MAC/BL,aAAa,CAACM,QAAQ,GAAG,aAAa;IAC1C,CAAC;IAlCG,IAAI,CAACnB,oBAAoB,GAAGA,oBAAoB;IAChD,IAAI,CAACoB,QAAQ,GAAGnB,YAAY;IAC5B,IAAI,CAACC,mBAAmB,GAAGA,mBAAmB;IAC9C,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,mBAAmB,GAAGA,mBAAmB;EAClD;EAEAiB,KAAKA,CAAA,EAAG;IACJ,MAAMC,eAAe,GAAG,IAAI,CAACtB,oBAAoB,CAAC,gCAAgC,CAAC;IACnF,IAAI,CAACuB,kBAAkB,CAACD,eAAe,CAAC;IACxC,IAAI,CAACE,sBAAsB,CAAC,CAAC;EACjC;EAEAA,sBAAsBA,CAAA,EAAG;IACrB,MAAMb,OAAO,GAAG,IAAI,CAACX,oBAAoB,CAAC,OAAO,EAC7C;MACIyB,MAAM,EAAE;IACZ,CACJ,CAAC;IACD,IAAI,CAACF,kBAAkB,CAACZ,OAAO,CAAC;EACpC;EAgBAe,OAAOA,CAACnB,KAAK,EAAE;IACX,IAAI,CAACP,oBAAoB,CAAC,UAAU,CAAC;IACrCM,SAAS,CAACC,KAAK,CAAC;IAChB;EACJ;;EAEAoB,WAAWA,CAAA,EAAG;IACV,MAAMhB,OAAO,GAAG,IAAI,CAACX,oBAAoB,CAAC,gEAAgE,EACtG;MACIyB,MAAM,EAAE;IACZ,CACJ,CAAC;IACD,IAAI,CAACF,kBAAkB,CAACZ,OAAO,CAAC;EACpC;EAEAY,kBAAkBA,CAACZ,OAAO,EAAE;IACxB,IAAI,CAACS,QAAQ,CAACQ,SAAS,KAAK;MACxB,GAAGA,SAAS;MAAEnB,QAAQ,EAAE,CAAC,GAAGmB,SAAS,CAACnB,QAAQ,EAAEE,OAAO;IAC3D,CAAC,CAAC,CAAC;EACP;AACJ;AAEA,eAAeb,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}