{"ast":null,"code":"class ActionProvider {\n  constructor(createChatBotMessage, setStateFunc, createClientMessage, stateRef, createCustomMessage, ...rest) {\n    this.createChatBotMessage = createChatBotMessage;\n    this.setState = setStateFunc;\n    this.createClientMessage = createClientMessage;\n    this.stateRef = stateRef;\n    this.createCustomMessage = createCustomMessage;\n  }\n  greet() {\n    const greetingMessage = this.createChatBotMessage(\"Please, tell me your username.\");\n    this.updateChatbotState(greetingMessage);\n    this.getUserNameAndPassword();\n  }\n  getUserNameAndPassword() {\n    const message = this.createChatBotMessage(\"User:\", {\n      widget: \"loginWidget\"\n    });\n    this.updateChatbotState(message);\n  }\n  goodBye(state) {\n    this.createChatBotMessage(\"Goodbye!\");\n    console.log(state);\n    var _gerarCsv = function () {\n      let csv = \"type, message\\n\";\n      state.messages.forEach(message => {\n        csv += message.type;\n        csv += ',' + message.message;\n        csv += '\\n';\n      });\n      var hiddenElement = document.createElement('a');\n      hiddenElement.href = 'data:text/csv;charset=utf-8,' + encodeURI(csv);\n      hiddenElement.target = '_blank';\n      hiddenElement.download = 'state.csv';\n    };\n    _gerarCsv();\n    //this.updateChatbotState(goodByeMessage)\n  }\n\n  loanOptions() {\n    const message = this.createChatBotMessage(\"Do you need help with loans? Here is some links that may help:\", {\n      widget: \"loanLinks\"\n    });\n    this.updateChatbotState(message);\n  }\n  updateChatbotState(message) {\n    this.setState(prevState => ({\n      ...prevState,\n      messages: [...prevState.messages, message]\n    }));\n  }\n}\nexport default ActionProvider;","map":{"version":3,"names":["ActionProvider","constructor","createChatBotMessage","setStateFunc","createClientMessage","stateRef","createCustomMessage","rest","setState","greet","greetingMessage","updateChatbotState","getUserNameAndPassword","message","widget","goodBye","state","console","log","_gerarCsv","csv","messages","forEach","type","hiddenElement","document","createElement","href","encodeURI","target","download","loanOptions","prevState"],"sources":["/home/joao/Desafio-Lexart/chatbot/src/ActionProvider.js"],"sourcesContent":["class ActionProvider {\n    constructor(\n        createChatBotMessage,\n        setStateFunc,\n        createClientMessage,\n        stateRef,\n        createCustomMessage,\n        ...rest\n    ) {\n        this.createChatBotMessage = createChatBotMessage;\n        this.setState = setStateFunc;\n        this.createClientMessage = createClientMessage;\n        this.stateRef = stateRef;\n        this.createCustomMessage = createCustomMessage;\n    }\n\n    greet() {\n        const greetingMessage = this.createChatBotMessage(\"Please, tell me your username.\")\n        this.updateChatbotState(greetingMessage)\n        this.getUserNameAndPassword()\n    }\n\n    getUserNameAndPassword() {\n        const message = this.createChatBotMessage(\"User:\",\n            {\n                widget: \"loginWidget\",\n            }\n        );\n        this.updateChatbotState(message);\n    }\n\n    goodBye(state) {\n        this.createChatBotMessage(\"Goodbye!\")\n        console.log(state);\n\n        var _gerarCsv = function(){\n            let csv = \"type, message\\n\";\n            state.messages.forEach(message => {\n                csv += message.type;\n                csv += ',' + message.message;\n                csv += '\\n';\n            });\n\n            var hiddenElement = document.createElement('a');\n            hiddenElement.href = 'data:text/csv;charset=utf-8,' + encodeURI(csv);\n            hiddenElement.target = '_blank';\n            hiddenElement.download = 'state.csv';\n        }\n    \n        _gerarCsv()\n        //this.updateChatbotState(goodByeMessage)\n    }\n\n    loanOptions() {\n        const message = this.createChatBotMessage(\"Do you need help with loans? Here is some links that may help:\",\n            {\n                widget: \"loanLinks\",\n            }\n        );\n        this.updateChatbotState(message);\n    };\n\n    updateChatbotState(message) {\n        this.setState(prevState => ({\n            ...prevState, messages: [...prevState.messages, message]\n        }))\n    }\n}\n\nexport default ActionProvider;"],"mappings":"AAAA,MAAMA,cAAc,CAAC;EACjBC,WAAWA,CACPC,oBAAoB,EACpBC,YAAY,EACZC,mBAAmB,EACnBC,QAAQ,EACRC,mBAAmB,EACnB,GAAGC,IAAI,EACT;IACE,IAAI,CAACL,oBAAoB,GAAGA,oBAAoB;IAChD,IAAI,CAACM,QAAQ,GAAGL,YAAY;IAC5B,IAAI,CAACC,mBAAmB,GAAGA,mBAAmB;IAC9C,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,mBAAmB,GAAGA,mBAAmB;EAClD;EAEAG,KAAKA,CAAA,EAAG;IACJ,MAAMC,eAAe,GAAG,IAAI,CAACR,oBAAoB,CAAC,gCAAgC,CAAC;IACnF,IAAI,CAACS,kBAAkB,CAACD,eAAe,CAAC;IACxC,IAAI,CAACE,sBAAsB,CAAC,CAAC;EACjC;EAEAA,sBAAsBA,CAAA,EAAG;IACrB,MAAMC,OAAO,GAAG,IAAI,CAACX,oBAAoB,CAAC,OAAO,EAC7C;MACIY,MAAM,EAAE;IACZ,CACJ,CAAC;IACD,IAAI,CAACH,kBAAkB,CAACE,OAAO,CAAC;EACpC;EAEAE,OAAOA,CAACC,KAAK,EAAE;IACX,IAAI,CAACd,oBAAoB,CAAC,UAAU,CAAC;IACrCe,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAElB,IAAIG,SAAS,GAAG,SAAAA,CAAA,EAAU;MACtB,IAAIC,GAAG,GAAG,iBAAiB;MAC3BJ,KAAK,CAACK,QAAQ,CAACC,OAAO,CAACT,OAAO,IAAI;QAC9BO,GAAG,IAAIP,OAAO,CAACU,IAAI;QACnBH,GAAG,IAAI,GAAG,GAAGP,OAAO,CAACA,OAAO;QAC5BO,GAAG,IAAI,IAAI;MACf,CAAC,CAAC;MAEF,IAAII,aAAa,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MAC/CF,aAAa,CAACG,IAAI,GAAG,8BAA8B,GAAGC,SAAS,CAACR,GAAG,CAAC;MACpEI,aAAa,CAACK,MAAM,GAAG,QAAQ;MAC/BL,aAAa,CAACM,QAAQ,GAAG,WAAW;IACxC,CAAC;IAEDX,SAAS,CAAC,CAAC;IACX;EACJ;;EAEAY,WAAWA,CAAA,EAAG;IACV,MAAMlB,OAAO,GAAG,IAAI,CAACX,oBAAoB,CAAC,gEAAgE,EACtG;MACIY,MAAM,EAAE;IACZ,CACJ,CAAC;IACD,IAAI,CAACH,kBAAkB,CAACE,OAAO,CAAC;EACpC;EAEAF,kBAAkBA,CAACE,OAAO,EAAE;IACxB,IAAI,CAACL,QAAQ,CAACwB,SAAS,KAAK;MACxB,GAAGA,SAAS;MAAEX,QAAQ,EAAE,CAAC,GAAGW,SAAS,CAACX,QAAQ,EAAER,OAAO;IAC3D,CAAC,CAAC,CAAC;EACP;AACJ;AAEA,eAAeb,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}