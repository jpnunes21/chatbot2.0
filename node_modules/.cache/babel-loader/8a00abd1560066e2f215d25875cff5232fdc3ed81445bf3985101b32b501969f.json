{"ast":null,"code":"var _jsxFileName = \"/home/joao/Desafio-Lexart/chatbot/src/App.js\";\n//import React, { useState } from 'react';\nimport React from 'react';\nimport Chatbot from 'react-chatbot-kit';\nimport './App.css';\nimport 'react-chatbot-kit/build/main.css';\nimport config from './config';\nimport ActionProvider from './ActionProvider';\nimport MessageParser from './MessageParser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  //const [showBot, toggleBot] = useState(false);\n\n  const saveMessages = (messages, HTMLString) => {\n    localStorage.setItem('chat_messages', JSON.stringify(messages));\n  };\n  const loadMessages = () => {\n    const messages = JSON.parse(localStorage.getItem('chat_messages'));\n    return messages;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(Chatbot, {\n        config: config,\n        actionProvider: ActionProvider,\n        messageParser: MessageParser,\n        messageHistory: loadMessages(),\n        saveMessages: saveMessages\n        //validator={validateInput}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Chatbot","config","ActionProvider","MessageParser","jsxDEV","_jsxDEV","App","saveMessages","messages","HTMLString","localStorage","setItem","JSON","stringify","loadMessages","parse","getItem","className","children","actionProvider","messageParser","messageHistory","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/joao/Desafio-Lexart/chatbot/src/App.js"],"sourcesContent":["//import React, { useState } from 'react';\nimport React from 'react';\nimport Chatbot from 'react-chatbot-kit';\nimport './App.css';\nimport 'react-chatbot-kit/build/main.css'\n\nimport config from './config';\nimport ActionProvider from './ActionProvider';\nimport MessageParser from './MessageParser';\n\nfunction App() {\n  //const [showBot, toggleBot] = useState(false);\n\n  const saveMessages = (messages, HTMLString) => {\n    localStorage.setItem('chat_messages', JSON.stringify(messages));\n  };\n\n  const loadMessages = () => {\n    const messages = JSON.parse(localStorage.getItem('chat_messages'));\n    return messages;\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Chatbot \n        config={config}\n        actionProvider={ActionProvider}\n        messageParser={MessageParser}\n        messageHistory={loadMessages()}\n        saveMessages={saveMessages}\n        //validator={validateInput}\n      />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,mBAAmB;AACvC,OAAO,WAAW;AAClB,OAAO,kCAAkC;AAEzC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,GAAGA,CAAA,EAAG;EACb;;EAEA,MAAMC,YAAY,GAAGA,CAACC,QAAQ,EAAEC,UAAU,KAAK;IAC7CC,YAAY,CAACC,OAAO,CAAC,eAAe,EAAEC,IAAI,CAACC,SAAS,CAACL,QAAQ,CAAC,CAAC;EACjE,CAAC;EAED,MAAMM,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMN,QAAQ,GAAGI,IAAI,CAACG,KAAK,CAACL,YAAY,CAACM,OAAO,CAAC,eAAe,CAAC,CAAC;IAClE,OAAOR,QAAQ;EACjB,CAAC;EAED,oBACEH,OAAA;IAAKY,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBb,OAAA;MAAQY,SAAS,EAAC,YAAY;MAAAC,QAAA,eAC5Bb,OAAA,CAACL,OAAO;QACRC,MAAM,EAAEA,MAAO;QACfkB,cAAc,EAAEjB,cAAe;QAC/BkB,aAAa,EAAEjB,aAAc;QAC7BkB,cAAc,EAAEP,YAAY,CAAC,CAAE;QAC/BP,YAAY,EAAEA;QACd;MAAA;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACC,EAAA,GA1BQpB,GAAG;AA4BZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}